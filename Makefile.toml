# `cargo make launch` for debug build
# `cargo make --profile prod launch` for release build

[tasks.editloader]
script = '''
hx loader/src/main.rs loader/src/uefi.rs
'''
[tasks.editkernel]
script = '''
hx kernel/src/main.rs
'''

[tasks.doc]
script = '''
cd loader
cargo doc ${@}
cd ../kernel
cargo doc ${@}
'''

[tasks.loader]
condition = { env = { "MODE" = "debug" } }
script = '''
cd loader
cargo build
'''

[tasks.kernel]
condition = { env = { "MODE" = "debug" } }
script = '''
cd kernel
cargo build
'''

[tasks.loader-release]
condition = { env = { "MODE" = "release" } }
script = '''
cd loader
cargo build --release
'''

[tasks.kernel-release]
condition = { env = { "MODE" = "release" } }
script = '''
cd kernel
cargo build --release
'''

[tasks.clear]
script = '''
cd loader
cargo clean
'''

[tasks.ovmf]
script = '''
curl -L https://github.com/uchan-nos/mikanos-build/raw/refs/tags/v2.0/devenv/OVMF_CODE.fd -o ovmf/OVMF_CODE.fd
curl -L https://github.com/uchan-nos/mikanos-build/raw/refs/tags/v2.0/devenv/OVMF_VARS.fd -o ovmf/OVMF_VARS.fd
'''

[tasks.make-image]
script = '''
rm -f disk.img
qemu-img create -f raw disk.img 200M
mkfs.fat -n 'MIKAN OS RS' -s 2 -f 2 -R 32 -F 32 disk.img
mkdir -p mnt
sudo mount -o loop disk.img mnt
sudo mkdir -p mnt/EFI/BOOT
sudo cp loader/target/x86_64-unknown-uefi/${MODE}/loader.efi mnt/EFI/BOOT/BOOTX64.EFI
sudo cp kernel/target/x86_64-unknown-none/${MODE}/kernel mnt/kernel.elf
sleep 1
sudo umount mnt
'''
dependencies = ["loader-release", "loader"]

[tasks.launch]
script = '''
qemu-system-x86_64 \
    -drive if=pflash,format=raw,file=./ovmf/OVMF_CODE.fd \
    -drive if=pflash,format=raw,file=./ovmf/OVMF_VARS.fd \
    -drive if=ide,index=0,media=disk,format=raw,file=disk.img
'''
dependencies = ["make-image"]

[env]
MODE = "debug"

[env.dev]
MODE = "debug"

[env.prod]
MODE = "release"
